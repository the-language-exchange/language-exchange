{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\themo\\\\Documents\\\\project\\\\language-exchange\\\\client\\\\src\\\\components\\\\MessageCard.js\";\nimport React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\nimport Reply from './Reply';\nimport axios from 'axios';\nexport default class MessageCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clickedMessage: this.props.clickedMessage\n    };\n    this.state = {\n      client: ''\n    };\n\n    this.componentDidMount = () => {\n      axios.get('/api/client').then(response => {\n        console.log(response.data); // put them into the state\n\n        this.setState({\n          client: response.data\n        });\n      }).catch(err => console.log(err));\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.clickedMessage !== this.props.clickedMessage) {\n      this.setState({\n        clickedMessage: this.props.clickedMessage\n      });\n    }\n  }\n\n  render() {\n    console.log(this.props.clickedMessage, \"cardmessage\");\n    if (!this.state.client) return null;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messagesCenter\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"message-card\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: \"Messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"scroller\",\n            children:\n            /*this.state.allMessages.map((data) => data._doc.message.map((message)=> {\n             return (\n               <div>\n               <Card.Text>\n               {message.content}\n              <p style={{fontSize: '10px'}}>Wrote by {message.user.username}</p>\n              </Card.Text>  \n               </div>\n             )\n            } ))*/\n            this.state.clickedMessage && this.state.clickedMessage.map(message => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: this.state.client.username === message.user.username ? \"talk-bubble-right tri-right round right-in\" : \"talk-bubble-left tri-right round left-in\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: this.state.client.username === message.user.username ? \"talktext-right\" : \"talktext-left\",\n                      children: [message.content, /*#__PURE__*/_jsxDEV(\"p\", {\n                        style: {\n                          fontSize: '10px'\n                        },\n                        children: [\"Wrote by \", message.user.username]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 60,\n                        columnNumber: 18\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 58,\n                      columnNumber: 18\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 18\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 18\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 18\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Reply, {\n            replyMessage: this.props.replyMessage,\n            messageID: this.props.messageID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/themo/Documents/project/language-exchange/client/src/components/MessageCard.js"],"names":["React","Component","Card","Reply","axios","MessageCard","state","clickedMessage","props","client","componentDidMount","get","then","response","console","log","data","setState","catch","err","componentDidUpdate","prevProps","render","map","message","username","user","content","fontSize","replyMessage","messageID"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Card } from 'react-bootstrap';\nimport Reply from './Reply';\nimport axios from 'axios'\n\nexport default class MessageCard extends Component {\n\n  state = {\n    clickedMessage: this.props.clickedMessage\n  }\n  componentDidUpdate(prevProps){\n    if(prevProps.clickedMessage !== this.props.clickedMessage){\n        this.setState({          \n            clickedMessage: this.props.clickedMessage\n        });\n    }\n}\n  \n  state = {\n    client: ''\n  }\n\n  componentDidMount = () => {\n    axios.get('/api/client')\n    .then(response => {\n      console.log(response.data);\n      // put them into the state\n      this.setState({\n       client: response.data\n      })\n    })\n    .catch(err => console.log(err))\n  }\n  \n  render() {\n    console.log(this.props.clickedMessage, \"cardmessage\")\n    if (!this.state.client) return null\n    return (\n      <>\n      <div className='messagesCenter'>\n        <Card className=\"message-card\">\n          <Card.Header>Messages</Card.Header>\n            <Card.Body className='scroller'>\n             {/*this.state.allMessages.map((data) => data._doc.message.map((message)=> {\n               return (\n                 <div>\n                 <Card.Text>\n                 {message.content}\n                <p style={{fontSize: '10px'}}>Wrote by {message.user.username}</p>\n                </Card.Text>  \n                 </div>\n               )\n             } ))*/ this.state.clickedMessage && this.state.clickedMessage.map(message => {\n               return(\n                 <div>\n                 <Card.Text >\n                 <div className= {this.state.client.username === message.user.username  ?  \"talk-bubble-right tri-right round right-in\" : \"talk-bubble-left tri-right round left-in\" }>\n                 <div className= {this.state.client.username === message.user.username  ?  \"talktext-right\" : \"talktext-left\" } >\n                 {message.content}\n                 <p style={{fontSize: '10px'}}>Wrote by {message.user.username}</p>\n                </div>\n                </div>\n                </Card.Text>  \n                 </div>\n               )\n             })}\n\n             \n            {/* <Card.Text>\n            <div class=\"talk-bubble-left tri-right round left-in\">\n            <div class=\"talktext-left\"> \n            \n            <p style={{fontSize: '10px'}}>Wrote by {message.user.username}</p>\n            </div>\n            </div>\n            \n            </Card.Text>   */}\n\n               </Card.Body>\n\n               <Reply replyMessage = {this.props.replyMessage} messageID = {this.props.messageID} />   \n\n\n               </Card>\n           </div>\n\n\n      </>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}