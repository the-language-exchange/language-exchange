{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\themo\\\\Documents\\\\project\\\\language-exchange\\\\client\\\\src\\\\components\\\\SideBar\\\\CountryField.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\nimport countries from './CountryList';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    margin: 2\n  },\n  noLabel: {\n    marginTop: theme.spacing(3)\n  }\n}));\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nfunction getStyles(name, targetValue, theme) {\n  return {\n    fontWeight: targetValue.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\n\nexport default function CountryField(props) {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [targetValue, setTargetValue] = React.useState([]);\n\n  const handleChange = event => {\n    setTargetValue(event.target.value);\n    props.setCountry(event.target.value); // props.handleChange()\n  };\n\n  React.useEffect(() => {\n    props.handleChange();\n  }, [props.country]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-mutiple-chip-label\",\n        children: \"Countries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-mutiple-chip-label\",\n        id: \"demo-mutiple-chip\",\n        multiple: true,\n        value: targetValue,\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(Input, {\n          id: \"select-multiple-chip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 18\n        }, this),\n        renderValue: selected => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.chips,\n          children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n            label: value,\n            className: classes.chip\n          }, value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this),\n        MenuProps: MenuProps,\n        children: countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: country.name,\n          style: getStyles(country.name, targetValue, theme),\n          children: country.name\n        }, country.code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CountryField, \"280CJz1ss+oVb0Rt9FPHrKp5FJg=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = CountryField;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryField\");","map":{"version":3,"sources":["C:/Users/themo/Documents/project/language-exchange/client/src/components/SideBar/CountryField.js"],"names":["React","makeStyles","useTheme","Input","InputLabel","MenuItem","FormControl","Select","Chip","countries","useStyles","theme","formControl","margin","spacing","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","getStyles","name","targetValue","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","CountryField","props","classes","setTargetValue","useState","handleChange","event","target","value","setCountry","useEffect","country","selected","map","code"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,0BAArC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,MAAMC,SAAS,GAAGT,UAAU,CAAEU,KAAD,KAAY;AACvCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADG;AAEXC,IAAAA,QAAQ,EAAE,GAFC;AAGXC,IAAAA,QAAQ,EAAE;AAHC,GAD0B;AAMvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,QAAQ,EAAE;AAFL,GANgC;AAUvCC,EAAAA,IAAI,EAAE;AACJP,IAAAA,MAAM,EAAE;AADJ,GAViC;AAavCQ,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAEX,KAAK,CAACG,OAAN,CAAc,CAAd;AADJ;AAb8B,CAAZ,CAAD,CAA5B;AAkBA,MAAMS,WAAW,GAAG,EAApB;AACA,MAAMC,gBAAgB,GAAG,CAAzB;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAEL,WAAW,GAAG,GAAd,GAAoBC,gBAD1B;AAELK,MAAAA,KAAK,EAAE;AAFF;AADG;AADI,CAAlB;;AASA,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,WAAzB,EAAsCrB,KAAtC,EAA6C;AAC3C,SAAO;AACLsB,IAAAA,UAAU,EACRD,WAAW,CAACE,OAAZ,CAAoBH,IAApB,MAA8B,CAAC,CAA/B,GACIpB,KAAK,CAACwB,UAAN,CAAiBC,iBADrB,GAEIzB,KAAK,CAACwB,UAAN,CAAiBE;AAJlB,GAAP;AAMD;;AAED,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC1C,QAAMC,OAAO,GAAG9B,SAAS,EAAzB;AACA,QAAMC,KAAK,GAAGT,QAAQ,EAAtB;AACA,QAAM,CAAC8B,WAAD,EAAcS,cAAd,IAAgCzC,KAAK,CAAC0C,QAAN,CAAe,EAAf,CAAtC;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BH,IAAAA,cAAc,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACAP,IAAAA,KAAK,CAACQ,UAAN,CAAiBH,KAAK,CAACC,MAAN,CAAaC,KAA9B,EAF8B,CAG/B;AACA,GAJD;;AAMD9C,EAAAA,KAAK,CAACgD,SAAN,CAAgB,MAAM;AACnBT,IAAAA,KAAK,CAACI,YAAN;AACF,GAFD,EAEE,CAACJ,KAAK,CAACU,OAAP,CAFF;AAIC,sBACE;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,SAAS,EAAET,OAAO,CAAC5B,WAAhC;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,yBADV;AAEE,QAAA,EAAE,EAAC,mBAFL;AAGE,QAAA,QAAQ,MAHV;AAIE,QAAA,KAAK,EAAEoB,WAJT;AAKE,QAAA,QAAQ,EAAEW,YALZ;AAME,QAAA,KAAK,eAAE,QAAC,KAAD;AAAO,UAAA,EAAE,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA,gBANT;AAOE,QAAA,WAAW,EAAGO,QAAD,iBACX;AAAK,UAAA,SAAS,EAAEV,OAAO,CAACvB,KAAxB;AAAA,oBACGiC,QAAQ,CAACC,GAAT,CAAcL,KAAD,iBACZ,QAAC,IAAD;AAAkB,YAAA,KAAK,EAAEA,KAAzB;AAAgC,YAAA,SAAS,EAAEN,OAAO,CAACpB;AAAnD,aAAW0B,KAAX;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBARJ;AAcE,QAAA,SAAS,EAAErB,SAdb;AAAA,kBAgBGhB,SAAS,CAAC0C,GAAV,CAAcF,OAAO,iBACpB,QAAC,QAAD;AAA6B,UAAA,KAAK,EAAEA,OAAO,CAAClB,IAA5C;AAAkD,UAAA,KAAK,EAAED,SAAS,CAACmB,OAAO,CAAClB,IAAT,EAAeC,WAAf,EAA4BrB,KAA5B,CAAlE;AAAA,oBACGsC,OAAO,CAAClB;AADX,WAAekB,OAAO,CAACG,IAAvB;AAAA;AAAA;AAAA;AAAA,gBADD;AAhBH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GA7CuBd,Y;UACN5B,S,EACFR,Q;;;KAFQoC,Y","sourcesContent":["import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\nimport countries from './CountryList'\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n  },\n  noLabel: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nfunction getStyles(name, targetValue, theme) {\n  return {\n    fontWeight:\n      targetValue.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nexport default function CountryField(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [targetValue, setTargetValue] = React.useState([]);\n\n  const handleChange = (event) => {\n    setTargetValue(event.target.value);\n    props.setCountry(event.target.value)\n   // props.handleChange()\n  };\n\n React.useEffect(() => {\n    props.handleChange()\n },[props.country])\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-mutiple-chip-label\">Countries</InputLabel>\n        <Select\n          labelId=\"demo-mutiple-chip-label\"\n          id=\"demo-mutiple-chip\"\n          multiple\n          value={targetValue}\n          onChange={handleChange}\n          input={<Input id=\"select-multiple-chip\" />}\n          renderValue={(selected) => (\n            <div className={classes.chips}>\n              {selected.map((value) => (\n                <Chip key={value} label={value} className={classes.chip} />\n              ))}\n            </div>\n          )}\n          MenuProps={MenuProps}\n        >\n          {countries.map(country => (\n            <MenuItem key={country.code} value={country.name} style={getStyles(country.name, targetValue, theme)}>\n              {country.name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n  \n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}