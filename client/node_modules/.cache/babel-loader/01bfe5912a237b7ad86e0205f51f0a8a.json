{"ast":null,"code":"import _objectSpread from\"C:/Users/themo/Documents/project/language-exchange/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/themo/Documents/project/language-exchange/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState}from'react';import countries from'./CountryList';import{Dropdown}from'semantic-ui-react';import'semantic-ui-css/semantic.min.css';export default function CountrySideBar(props){var _React$useState=React.useState(''),_React$useState2=_slicedToArray(_React$useState,2),country=_React$useState2[0],setCountry=_React$useState2[1];var changeHandler=function changeHandler(event,data){setCountry(data.value);props.setCountry(data.value);//props.handleChange()\n};React.useEffect(function(){props.handleChange();},[props.country]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Dropdown,{placeholder:\"Choose The Country\",className:\"languageSideBar\",name:props.name,fluid:true,multiple:true,selection:true,options:countries.map(function(obj){return _objectSpread(_objectSpread({},obj),{},{key:obj.code,text:obj.name,value:obj.name});}),onChange:changeHandler,defaultValue:country})});}","map":{"version":3,"sources":["C:/Users/themo/Documents/project/language-exchange/client/src/components/SideBar/CountrySideBar.js"],"names":["React","useState","countries","Dropdown","CountrySideBar","props","country","setCountry","changeHandler","event","data","value","useEffect","handleChange","name","map","obj","key","code","text"],"mappings":"0YAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,SAAP,KAAsB,eAAtB,CACA,OAASC,QAAT,KAAwB,mBAAxB,CACA,MAAO,kCAAP,CAEA,cAAe,SAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAA+B,qBACdL,KAAK,CAACC,QAAN,CAAe,EAAf,CADc,oDACrCK,OADqC,qBAC5BC,UAD4B,qBAG5C,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAQC,IAAR,CAAiB,CACrCH,UAAU,CAACG,IAAI,CAACC,KAAN,CAAV,CACAN,KAAK,CAACE,UAAN,CAAiBG,IAAI,CAACC,KAAtB,EACA;AACA,CAJF,CAMCX,KAAK,CAACY,SAAN,CAAgB,UAAM,CACrBP,KAAK,CAACQ,YAAN,GACA,CAFD,CAEE,CAACR,KAAK,CAACC,OAAP,CAFF,EAGD,mBACE,kCACA,KAAC,QAAD,EACA,WAAW,CAAG,oBADd,CAEA,SAAS,CAAG,iBAFZ,CAGA,IAAI,CAAED,KAAK,CAACS,IAHZ,CAIA,KAAK,KAJL,CAIM,QAAQ,KAJd,CAIe,SAAS,KAJxB,CAKA,OAAO,CAAEZ,SAAS,CAACa,GAAV,CAAc,SAAAC,GAAG,wCAASA,GAAT,MAAcC,GAAG,CAACD,GAAG,CAACE,IAAtB,CAA4BC,IAAI,CAACH,GAAG,CAACF,IAArC,CAA2CH,KAAK,CAACK,GAAG,CAACF,IAArD,IAAjB,CALT,CAMA,QAAQ,CAAIN,aANZ,CAOA,YAAY,CAAGF,OAPf,EADA,EADF,CAaD","sourcesContent":["import React, {useState} from 'react'\r\nimport countries from './CountryList'\r\nimport { Dropdown} from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nexport default function CountrySideBar(props) {\r\n  const [country, setCountry] = React.useState('')\r\n\r\n  const changeHandler = (event, data) => {\r\n    setCountry(data.value)\r\n    props.setCountry(data.value)\r\n    //props.handleChange()\r\n   }\r\n\r\n   React.useEffect(() => {\r\n    props.handleChange()\r\n   },[props.country])\r\n  return (\r\n    <div>\r\n    <Dropdown \r\n    placeholder = 'Choose The Country'\r\n    className = 'languageSideBar'\r\n    name={props.name}\r\n    fluid multiple selection \r\n    options={countries.map(obj => ({...obj, key:obj.code, text:obj.name, value:obj.name }))}\r\n    onChange = {changeHandler}\r\n    defaultValue= {country}\r\n     />\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}