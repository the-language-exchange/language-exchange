{"ast":null,"code":"import _objectSpread from\"C:/Users/themo/Documents/project/language-exchange/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/themo/Documents/project/language-exchange/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState}from'react';import languages from'./LanguageList';import{Dropdown}from'semantic-ui-react';import'semantic-ui-css/semantic.min.css';export default function LanguageSideBar(props){var _React$useState=React.useState(''),_React$useState2=_slicedToArray(_React$useState,2),language=_React$useState2[0],setLanguage=_React$useState2[1];var changeHandler=function changeHandler(event,data){setLanguage(data.value);props.setLanguage(data.value);//props.handleChange()\n};React.useEffect(function(){props.handleChange();},[props.language]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Dropdown,{placeholder:\"Choose Your Language\",className:\"languageSideBar\",name:props.name,fluid:true,multiple:true,selection:true,options:languages.map(function(obj){return _objectSpread(_objectSpread({},obj),{},{key:obj.code,text:obj.name,value:obj.name});}),onChange:changeHandler,defaultValue:language})});}","map":{"version":3,"sources":["C:/Users/themo/Documents/project/language-exchange/client/src/components/SideBar/LanguageSideBar.js"],"names":["React","useState","languages","Dropdown","LanguageSideBar","props","language","setLanguage","changeHandler","event","data","value","useEffect","handleChange","name","map","obj","key","code","text"],"mappings":"0YAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,SAAP,KAAsB,gBAAtB,CACA,OAASC,QAAT,KAAwB,mBAAxB,CACA,MAAO,kCAAP,CAEA,cAAe,SAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,qBACbL,KAAK,CAACC,QAAN,CAAe,EAAf,CADa,oDACtCK,QADsC,qBAC5BC,WAD4B,qBAG7C,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAQC,IAAR,CAAiB,CACrCH,WAAW,CAACG,IAAI,CAACC,KAAN,CAAX,CACAN,KAAK,CAACE,WAAN,CAAkBG,IAAI,CAACC,KAAvB,EACA;AACA,CAJF,CAMCX,KAAK,CAACY,SAAN,CAAgB,UAAM,CACrBP,KAAK,CAACQ,YAAN,GACA,CAFD,CAEE,CAACR,KAAK,CAACC,QAAP,CAFF,EAGD,mBACE,kCACA,KAAC,QAAD,EACA,WAAW,CAAG,sBADd,CAEA,SAAS,CAAG,iBAFZ,CAGA,IAAI,CAAED,KAAK,CAACS,IAHZ,CAIA,KAAK,KAJL,CAIM,QAAQ,KAJd,CAIe,SAAS,KAJxB,CAKA,OAAO,CAAEZ,SAAS,CAACa,GAAV,CAAc,SAAAC,GAAG,wCAASA,GAAT,MAAcC,GAAG,CAACD,GAAG,CAACE,IAAtB,CAA4BC,IAAI,CAACH,GAAG,CAACF,IAArC,CAA2CH,KAAK,CAACK,GAAG,CAACF,IAArD,IAAjB,CALT,CAMA,QAAQ,CAAIN,aANZ,CAOA,YAAY,CAAGF,QAPf,EADA,EADF,CAaD","sourcesContent":["import React, {useState} from 'react'\r\nimport languages from './LanguageList'\r\nimport { Dropdown} from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nexport default function LanguageSideBar(props) {\r\n  const [language, setLanguage] = React.useState('')\r\n\r\n  const changeHandler = (event, data) => {\r\n    setLanguage(data.value)\r\n    props.setLanguage(data.value)\r\n    //props.handleChange()\r\n   }\r\n\r\n   React.useEffect(() => {\r\n    props.handleChange()\r\n   },[props.language])\r\n  return (\r\n    <div>\r\n    <Dropdown \r\n    placeholder = 'Choose Your Language'\r\n    className = 'languageSideBar'\r\n    name={props.name}\r\n    fluid multiple selection \r\n    options={languages.map(obj => ({...obj, key:obj.code, text:obj.name, value:obj.name }))}\r\n    onChange = {changeHandler}\r\n    defaultValue= {language}\r\n     />\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}