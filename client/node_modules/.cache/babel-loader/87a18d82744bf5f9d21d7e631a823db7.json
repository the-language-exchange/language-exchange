{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\themo\\\\Documents\\\\project\\\\language-exchange\\\\client\\\\src\\\\components\\\\Reply.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nexport default class Reply extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      content: '',\n      clientID: null,\n      username: null,\n      clicks: 0\n    };\n\n    this.sendData = () => {\n      axios.post(`/api/messages/reply/${this.props.messageID}`, {\n        content: this.state.content,\n        user: this.state.clientID\n      }).then(res => true).catch(err => console.log(err));\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        clicks: this.state.clicks + 1\n      });\n      this.props.replyMessage({\n        user: {\n          username: this.state.username\n        },\n        content: this.state.content\n      });\n      this.sendData();\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        content: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/api/client').then(res => this.setState({\n      clientID: res.data._id,\n      username: res.data.username\n    }));\n  }\n  /*componentDidUpdate(prevProps, prevState) {\n   if( prevState.clicks >= 1 && this.state.clientID != null) {\n    this.props.replyMessage({user:this.state.clientID, content:this.state.content})\n    this.sendData()\n   }\n  }*/\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messageFormInbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              htmlFor: \"content\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"content\",\n              placeholder: \"Write a message\",\n              as: \"textarea\",\n              rows: 3,\n              id: \"content\",\n              value: this.state.content,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/themo/Documents/project/language-exchange/client/src/components/Reply.js"],"names":["axios","React","Component","Button","Form","Reply","state","content","clientID","username","clicks","sendData","post","props","messageID","user","then","res","catch","err","console","log","handleSubmit","event","preventDefault","setState","replyMessage","handleChange","target","value","componentDidMount","get","data","_id","render"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { Component } from 'react'\nimport {Button, Form } from 'react-bootstrap';\nexport default class Reply extends Component {\n  \n  state = {\n    content:'',\n    clientID:null,\n    username:null,\n    clicks:0\n  }\n\n     sendData = () => {\n     axios.post(`/api/messages/reply/${this.props.messageID}`, \n     {content:this.state.content,user:this.state.clientID})\n    .then(res => true)\n    .catch(err => console.log(err))\n   }\n  \n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.setState({clicks:this.state.clicks+1})\n    this.props.replyMessage({user:{username:this.state.username}, content:this.state.content})\n    this.sendData()\n  }\n  handleChange = (event) => {\n    this.setState({content:event.target.value})\n  }\n\n  componentDidMount() {\n    axios.get('/api/client')\n    .then(res => this.setState({clientID:res.data._id, username:res.data.username}))\n  }\n\n  /*componentDidUpdate(prevProps, prevState) {\n   if( prevState.clicks >= 1 && this.state.clientID != null) {\n    this.props.replyMessage({user:this.state.clientID, content:this.state.content})\n    this.sendData()\n   }\n  }*/\n  render() {\n    return (\n      <>\n\n      <div className='messageFormInbox' >\n      <hr></hr>\n\n      <Form onSubmit={this.handleSubmit} > \n                <Form.Group>\n                  <Form.Label htmlFor='content'> </Form.Label>\n                  <Form.Control\n                    type='text'\n                    name='content'\n                    placeholder='Write a message'\n                    as=\"textarea\" \n                    rows={3} \n                    id='content'\n                    value={this.state.content}\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n                <Button type='submit'>Send</Button>\n        </Form>\n      \n      </div>\n      </>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}